<?xml version="1.0" encoding="utf-8" ?>
<Procedures>
  <Procedure>
    <Name>RAND</Name>
    <Parameters></Parameters>
    <Returns>RET BIGINT</Returns>
    <Declares></Declares>
    <Code>
      SELECT MAX((CAST(REPLACE(CAST(CURRENT_DATE AS VARCHAR(20)),'-','') AS BIGINT)/10000)+
      (CAST(REPLACE(REPLACE(CAST(CURRENT_TIME AS VARCHAR(20)),':',''),'.','') AS BIGINT)*RAND())/10000)
      FROM RDB$DATABASE INTO :ret;
      SELECT (MAX((CAST(REPLACE(CAST(CURRENT_DATE AS VARCHAR(20)),'-','') AS BIGINT)/10000)+
      (CAST(REPLACE(REPLACE(CAST(CURRENT_TIME AS VARCHAR(20)),':',''),'.','') AS BIGINT)*RAND()/1000))*
      :ret)
      FROM RDB$DATABASE INTO :ret;
    </Code>
  </Procedure>
  <Procedure>
    <Name>CALCULATE_HASH</Name>
    <Parameters>STRINGTOHASH VARCHAR(4000)</Parameters>
    <Returns>RET BIGINT</Returns>
    <Declares>
      DECLARE VARIABLE counter INT;
      DECLARE VARIABLE switch INT;
      DECLARE VARIABLE curChar CHAR;
      DECLARE VARIABLE lastChar CHAR;
    </Declares>
    <Code>

      lastChar = SUBSTRING(stringToHash FROM 1 FOR 1);
      counter = 2;
      ret = 0;
      switch = 0;
      WHILE (counter &lt; CHAR_LENGTH(stringToHash)) DO
  BEGIN
    curChar = SUBSTRING(stringToHash FROM counter FOR 1);
    IF (switch &lt; 8 ) THEN
        BEGIN
            ret = ret + (ASCII_VAL(curChar)*
                ASCII_VAL(lastChar));
            switch=switch+1;
        END
    ELSE
        BEGIN
            ret = ret - (ASCII_VAL(curChar)*
                ASCII_VAL(lastChar));
            switch=0;
        END
    lastChar=curChar;
    counter = counter+1;
  END
    </Code>
  </Procedure>
  <Procedure>
    <Name>CONVERT_BIGINT_CHARSTRING</Name>
    <Parameters>INTVAL BIGINT</Parameters>
    <Returns>RET VARCHAR(50)</Returns>
    <Declares>
      DECLARE VARIABLE counter INT;
      DECLARE VARIABLE stringToHash VARCHAR(4000);
      DECLARE VARIABLE numVal INT;
    </Declares>
    <Code>
      stringToHash = CAST(intVal AS VARCHAR(4000));
      counter = 1;
      ret = '';
      WHILE (counter &lt; CHAR_LENGTH(stringToHash)) DO
      BEGIN
      IF ((counter+1)&lt;CHAR_LENGTH(stringToHash)) THEN
      numVal = CAST(SUBSTRING(stringToHash FROM counter FOR 2) AS INT);
      ELSE
      numVal = CAST(SUBSTRING(stringToHash FROM counter FOR 1) AS INT);
      numVal = numVal+20;
      IF (numVal&lt;48) THEN
      numVal = numVal + 28;
      IF (numVal BETWEEN 58 AND 64) THEN
      numVal = numVal + 12;
      IF (numVal BETWEEN 91 AND 97) THEN
      numVal = numVal + 12;
      IF (numVal&gt;122) THEN
      numVal = numVal - 20;
      IF (numVal BETWEEN 58 AND 64) THEN
      numVal = numVal + 12;
      IF (numVal BETWEEN 91 AND 97) THEN
      numVal = numVal + 12;
      ret=ret;
      ret = ret || ASCII_CHAR(numVal);
      counter = counter+1;
      END
    </Code>
  </Procedure>
  <Procedure>
    <Name>GENERATE_UNIQUE_ID</Name>
    <Parameters></Parameters>
    <Returns>RET VARCHAR(8000)</Returns>
    <Declares>
      DECLARE VARIABLE SECT VARCHAR(50);
      DECLARE VARIABLE RAND_NUM BIGINT;
      DECLARE VARIABLE TMP BIGINT;
    </Declares>
    <Code>
      ret = '';
      EXECUTE PROCEDURE RAND returning_values RAND_NUM;
      EXECUTE PROCEDURE CONVERT_BIGINT_CHARSTRING(RAND_NUM) returning_values SECT;
      ret = SUBSTRING(SECT FROM 3 FOR 5) ||'-';
      TMP = RAND_NUM;
      EXECUTE PROCEDURE RAND returning_values RAND_NUM;
      RAND_NUM = TMP + (RAND_NUM/20);
      TMP = RAND_NUM;
      EXECUTE PROCEDURE CONVERT_BIGINT_CHARSTRING(RAND_NUM) returning_values SECT;
      ret = ret||SUBSTRING(SECT FROM 1 FOR 8) ||'-';
      EXECUTE PROCEDURE RAND returning_values RAND_NUM;
      RAND_NUM = TMP - (RAND_NUM/40);
      TMP = RAND_NUM;
      EXECUTE PROCEDURE CONVERT_BIGINT_CHARSTRING(RAND_NUM) returning_values SECT;
      ret = ret||SUBSTRING(SECT FROM 1 FOR 8) ||'-';
      EXECUTE PROCEDURE RAND returning_values RAND_NUM;
      RAND_NUM = TMP + (RAND_NUM/60);
      TMP = RAND_NUM;
      EXECUTE PROCEDURE CONVERT_BIGINT_CHARSTRING(RAND_NUM) returning_values SECT;
      ret = ret||SUBSTRING(SECT FROM 1 FOR 8) ||'-';
      EXECUTE PROCEDURE RAND returning_values RAND_NUM;
      RAND_NUM = TMP - (RAND_NUM/80);
      TMP = RAND_NUM;
      EXECUTE PROCEDURE CONVERT_BIGINT_CHARSTRING(RAND_NUM) returning_values SECT;
      ret = ret||SUBSTRING(SECT FROM 3 FOR 5);
    </Code>
  </Procedure>
</Procedures>
